<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="kr.ac.kopo.dao.RestaurantDAO">

    <!-- 찜 등록 -->
    <insert id="insertFavorite" parameterType="kr.ac.kopo.vo.FavoriteRestaurantVO">
        INSERT INTO FAVORITE_RESTAURANT (FAVORITE_ID, MEMBER_ID, RESTAURANT_ID)
        VALUES (FAVORITE_RESTAURANT_SEQ.NEXTVAL, #{memberId}, #{restaurantId})
    </insert>

    <!-- 찜 해제 -->
    <delete id="deleteFavorite" parameterType="kr.ac.kopo.vo.FavoriteRestaurantVO">
        DELETE FROM FAVORITE_RESTAURANT
        WHERE MEMBER_ID = #{memberId}
          AND RESTAURANT_ID = #{restaurantId}
    </delete>

    <!-- 특정 사용자의 해당 맛집 찜 여부 확인 -->
    <select id="selectFavorite"
            parameterType="kr.ac.kopo.vo.FavoriteRestaurantVO"
            resultType="kr.ac.kopo.vo.FavoriteRestaurantVO">
        SELECT *
        FROM FAVORITE_RESTAURANT
        WHERE MEMBER_ID = #{memberId}
          AND RESTAURANT_ID = #{restaurantId}
    </select>

    <!-- 특정 맛집의 총 찜 수 (활성 사용자만) -->
    <select id="countFavoriteByRestaurant" parameterType="int" resultType="int">
        SELECT COUNT(*) 
        FROM FAVORITE_RESTAURANT F
        JOIN MEMBER M ON F.MEMBER_ID = M.ID
        WHERE F.RESTAURANT_ID = #{restaurantId}
          AND M.STATUS = 'Y'
    </select>

    <!-- [관리자] 사용자의 찜 목록 (페이지네이션) -->
    <select id="selectFavoriteRestaurantsByMember"
            parameterType="map"
	        resultType="kr.ac.kopo.vo.RestaurantVO">
        SELECT *
        FROM (
            SELECT ROWNUM AS RNUM, T1.*
            FROM (
                SELECT
                    R.RESTAURANT_ID       AS restaurantId,
                    R.NAME,
                    R.CATEGORY,
                    R.ADDRESS
                FROM FAVORITE_RESTAURANT F
                JOIN RESTAURANT R ON F.RESTAURANT_ID = R.RESTAURANT_ID
                WHERE F.MEMBER_ID = #{memberId} AND R.STATUS = 'Y'
                ORDER BY F.REGDATE DESC
            ) T1
        )
        WHERE RNUM BETWEEN #{start} AND #{end}
	</select>
    
    <!-- 특정 회원의 찜 목록 조회 (전체 - 마이페이지용) -->
    <select id="selectFavoriteRestaurantsByMemberId"
	        parameterType="string"
	        resultType="kr.ac.kopo.vo.RestaurantVO">
	    SELECT 
	    	R.RESTAURANT_ID       AS restaurantId,
	        R.NAME,
	        R.REGION,
	        R.CATEGORY,
	        R.STAR_PERCENT        AS starPercent,
	        R.STAR_SCORE          AS starScore,
	        R.REVIEW_COUNT        AS reviewCount,
	        R.MZ_SCORE          AS mzScore,
	        R.ADDRESS,
	        R.PHONE,
	        R.MAIN_IMG_URL1       AS mainImgUrl1,
	        R.MAIN_IMG_URL2       AS mainImgUrl2
	    FROM FAVORITE_RESTAURANT F
	    JOIN RESTAURANT R ON F.RESTAURANT_ID = R.RESTAURANT_ID
	    WHERE F.MEMBER_ID = #{memberId} AND R.status = 'Y'
	    ORDER BY F.REGDATE DESC
	</select>

    <!-- 특정 회원의 찜 총 개수 (활성 맛집만 카운트) -->
    <select id="selectFavoriteCountByMemberId" parameterType="string" resultType="int">
        SELECT COUNT(*)
        FROM FAVORITE_RESTAURANT F
        JOIN RESTAURANT R ON F.RESTAURANT_ID = R.RESTAURANT_ID
        WHERE F.MEMBER_ID = #{memberId} AND R.STATUS = 'Y'
    </select>

    <!-- ▼▼▼▼▼ [추가] 관리자 회원 상세 페이지용 ▼▼▼▼▼ -->
    <!-- 특정 회원의 찜 총 개수 -->
    <select id="selectFavoriteCountByUserId" parameterType="string" resultType="int">
        SELECT COUNT(*)
        FROM FAVORITE_RESTAURANT
        WHERE MEMBER_ID = #{id}
    </select>

    <!-- 특정 회원의 찜 목록 (페이징) -->
    <select id="selectFavoritesByUserId" parameterType="map" resultType="kr.ac.kopo.vo.RestaurantVO">
        SELECT *
        FROM (
            SELECT ROWNUM AS RNUM, T1.*
            FROM (
                SELECT 
                    R.RESTAURANT_ID       AS restaurantId,
                    R.NAME                AS name,
                    R.REGION              AS region,
                    R.CATEGORY            AS category,
                    R.STAR_PERCENT        AS starPercent,
                    R.STAR_SCORE          AS starScore,
                    R.REVIEW_COUNT        AS reviewCount,
                    R.MZ_SCORE          AS mzScore,
                    R.ADDRESS             AS address,
                    R.PHONE               AS phone,
                    R.MAIN_IMG_URL1       AS mainImgUrl1,
                    R.MAIN_IMG_URL2       AS mainImgUrl2,
                    F.REGDATE             AS favoriteRegdate -- 찜한 날짜
                FROM FAVORITE_RESTAURANT F
                JOIN RESTAURANT R ON F.RESTAURANT_ID = R.RESTAURANT_ID
                WHERE F.MEMBER_ID = #{id}
                ORDER BY F.REGDATE DESC
            ) T1
        )
        WHERE RNUM BETWEEN #{start} AND #{end}
    </select>
    <!-- ▲▲▲▲▲ 여기까지 추가 ▲▲▲▲▲ -->

</mapper>
